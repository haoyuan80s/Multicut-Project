#+TITLE: Multicut-Project                                                                                                                                                         
* Codes:
** naive.py
Implements the multi-cut IP algorithm naively.(cf. text book 8.3) 
** LP_relax.py
Implements the LP relaxation with compact LP formulation.
** region_growing.py
Implements the region_growing alg as in approximation book sec 8.3
** main.py
Creats several examples and runing different algorithms on it, (should add figures)

* General Plan

For small-sized problem, we will consider the accuracy of the approximation algorithm.
Approx-Alg ≥ IP ≥ LP

For larger-sized problem, forget about solving the IP. We will consider the speed in term of wall-clock time. We can still have somewhat of a handle on the accuracy by comparing$

For the rounding approximation algorithm, there is an inner LP, which at this point we know of two formulations:

1. The book in section 8.3 discusses a exponentially-sized LP and a polynomial time separation oracle. To use this, we need to use the separation oracle as a subroutine of an op$
2. In the lecture, we learned a polynomial-sized LP.

One deliverable of our project will be comparing how these two inner LPs perform in term of speed.

We have decided to use Python as our scripting language and Gurobi as the solver, which is available on CAEN machines.

For testing the performance, we will evaluate on
1. Toy examples
2. Synthetic examples
3. Real data (traffic data, power grid data, video object segmentation, social graphs)

* A Small Scale Toy Example
Run code step by step
1. Log into Caen.
2. Input the follows to avaliable Gurobi

    $ module available gurobi

    $ module load gurobi

3. The code below ask Gurobi solver to solve the naive IP problem. It is a Minimum cut problem cf. Sec 2.1 in notes Randomized Rounding.

    $ gurobi.sh main.py
* TODO Ellipsoid Method.
The native LP relaxation has exponentially many constrains. 
It can be solved in polynomial time base on ellipsoid method 
with polynomial time separation method. 

* A Compact Formulat
By introducing "distance", the LP can be modified such that it has polynomial constrains.
* Region Growing Alg
cf. Approx alg book section 8.3
* TODO Large Scale Examples
* TODO A Practical Example
* TODO Collect Results and Plot Beautiful Figures
